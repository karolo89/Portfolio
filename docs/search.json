[
  {
    "objectID": "posts/Time-Series/TimeSeries.html",
    "href": "posts/Time-Series/TimeSeries.html",
    "title": "Time Series Project",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\nlibrary(lubridate); library(tsibble)\nlibrary(readxl)\nlibrary(fpp3)\n\nlibrary(showtext)\nshowtext_auto()\n\nlibrary(plotly)\nlibrary(feasts)\nlibrary(glue)\nlibrary(cowplot)\n\n\n# Add fonts from Google.\nfont_add_google(\"Roboto Mono\", \"Roboto Mono\")\nfont_add_google(\"Open Sans\", \"Open Sans\")\nfont_add_google(\"Special Elite\", \"Special Elite\")"
  },
  {
    "objectID": "posts/Time-Series/TimeSeries.html#step-1-problem-definition",
    "href": "posts/Time-Series/TimeSeries.html#step-1-problem-definition",
    "title": "Time Series Project",
    "section": "Step 1: Problem Definition",
    "text": "Step 1: Problem Definition\nIn this project, I will perform a time series analysis using Zillow’s historical median home prices for the US from March 2015 to October 2022. The project aims to provide information on renting costs in Orlando- FL, Portland- OR, and Houston- TX, and find the month that offers the lowest price to move in."
  },
  {
    "objectID": "posts/Time-Series/TimeSeries.html#step-2-gathering-information",
    "href": "posts/Time-Series/TimeSeries.html#step-2-gathering-information",
    "title": "Time Series Project",
    "section": "Step 2: Gathering Information",
    "text": "Step 2: Gathering Information\nYou can find this free dataset on the Zillow website: https://www.zillow.com/research/data/#other-metrics\n\n\nShow the code\nraw_city <- read.csv(\"C:/Users/karol/Desktop/Portfolio/City_zori_sm_month.csv\")\n\n\n\nRegionID: This is unique Id for the Regions\nSizeRank: This is the ranking done based on the size of the region\nRegionName: This field contains the name of the city.\nRegionType: Type of region.\nStateName: State\nState: This column provide the specific City Name of Housing Data\nMetro: This provide the name of the metro city around that region\nCounty: Name This is the county name for that region\nMonths: Column These columns contains the prices of region for every month since 2015- 2022"
  },
  {
    "objectID": "posts/Time-Series/TimeSeries.html#step-3-preliminary-exploratory-analysis.",
    "href": "posts/Time-Series/TimeSeries.html#step-3-preliminary-exploratory-analysis.",
    "title": "Time Series Project",
    "section": "Step 3: Preliminary (exploratory) analysis.",
    "text": "Step 3: Preliminary (exploratory) analysis.\n\n\nShow the code\nstr(raw_city[,c(1:11)])\n\n\n'data.frame':   3500 obs. of  11 variables:\n $ RegionID  : int  6181 12447 39051 17426 6915 40326 13271 18959 54296 38128 ...\n $ SizeRank  : int  0 1 2 3 4 5 6 7 8 9 ...\n $ RegionName: chr  \"New York\" \"Los Angeles\" \"Houston\" \"Chicago\" ...\n $ RegionType: chr  \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ State     : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ Metro     : chr  \"New York-Newark-Jersey City, NY-NJ-PA\" \"Los Angeles-Long Beach-Anaheim, CA\" \"Houston-The Woodlands-Sugar Land, TX\" \"Chicago-Naperville-Elgin, IL-IN-WI\" ...\n $ CountyName: chr  \"Queens County\" \"Los Angeles County\" \"Harris County\" \"Cook County\" ...\n $ X3.31.2015: num  2730 2004 1285 1555 1019 ...\n $ X4.30.2015: num  2755 2011 1293 1572 1029 ...\n $ X5.31.2015: num  2780 2033 1304 1587 1040 ...\n\n\nWe have to make this dataset tidy. Tidy Data is a way of structuring data so that it can be easily understood by people and analyzed by machines.\nI need to remove the X at the beginning of the dates (X3.31.2015,…)\n\n\nShow the code\nnames(raw_city) <- sub(\"^X\", \"\", names(raw_city))\nstr(raw_city[,c(1:10)],10)\n\n\n'data.frame':   3500 obs. of  10 variables:\n $ RegionID  : int  6181 12447 39051 17426 6915 40326 13271 18959 54296 38128 ...\n $ SizeRank  : int  0 1 2 3 4 5 6 7 8 9 ...\n $ RegionName: chr  \"New York\" \"Los Angeles\" \"Houston\" \"Chicago\" ...\n $ RegionType: chr  \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ State     : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ Metro     : chr  \"New York-Newark-Jersey City, NY-NJ-PA\" \"Los Angeles-Long Beach-Anaheim, CA\" \"Houston-The Woodlands-Sugar Land, TX\" \"Chicago-Naperville-Elgin, IL-IN-WI\" ...\n $ CountyName: chr  \"Queens County\" \"Los Angeles County\" \"Harris County\" \"Cook County\" ...\n $ 3.31.2015 : num  2730 2004 1285 1555 1019 ...\n $ 4.30.2015 : num  2755 2011 1293 1572 1029 ...\n\n\nNow, I will create a new column called Price, where the values from the dates column will merge into it.\n\n\nShow the code\nrent_city <- raw_city %>% \n  pivot_longer(-c(RegionID,SizeRank,RegionName,RegionType,StateName,State,Metro,CountyName),\n    names_to = \"Monthly\",\n    values_to = \"Price\"\n  ) \nstr(rent_city)\n\n\ntibble [318,500 × 10] (S3: tbl_df/tbl/data.frame)\n $ RegionID  : int [1:318500] 6181 6181 6181 6181 6181 6181 6181 6181 6181 6181 ...\n $ SizeRank  : int [1:318500] 0 0 0 0 0 0 0 0 0 0 ...\n $ RegionName: chr [1:318500] \"New York\" \"New York\" \"New York\" \"New York\" ...\n $ RegionType: chr [1:318500] \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr [1:318500] \"NY\" \"NY\" \"NY\" \"NY\" ...\n $ State     : chr [1:318500] \"NY\" \"NY\" \"NY\" \"NY\" ...\n $ Metro     : chr [1:318500] \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" ...\n $ CountyName: chr [1:318500] \"Queens County\" \"Queens County\" \"Queens County\" \"Queens County\" ...\n $ Monthly   : chr [1:318500] \"3.31.2015\" \"4.30.2015\" \"5.31.2015\" \"6.30.2015\" ...\n $ Price     : num [1:318500] 2730 2755 2780 2805 2821 ...\n\n\n\n\nShow the code\n#Converting the Date from factor to character\n\nrent_clean <- rent_city %>%\n            mutate(Monthly_parsed = as.Date(Monthly,\"%m.%d.%Y\"))\n\n\nrent_clean[[\"Monthly\"]]<- as.character(rent_clean$Monthly)\n\nrent_city[[\"Monthly\"]]<- as.character(rent_city$Monthly)\nsummary(rent_city)\n\n\n    RegionID         SizeRank        RegionName         RegionType       \n Min.   :  3310   Min.   :    0.0   Length:318500      Length:318500     \n 1st Qu.: 16840   1st Qu.:  886.8   Class :character   Class :character  \n Median : 31552   Median : 1902.5   Mode  :character   Mode  :character  \n Mean   : 63080   Mean   : 2637.9                                        \n 3rd Qu.: 46147   3rd Qu.: 3441.2                                        \n Max.   :840556   Max.   :28107.0                                        \n                                                                         \n  StateName            State              Metro            CountyName       \n Length:318500      Length:318500      Length:318500      Length:318500     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Monthly              Price         \n Length:318500      Min.   :     0.0  \n Class :character   1st Qu.:   912.1  \n Mode  :character   Median :  1273.5  \n                    Mean   :  1392.0  \n                    3rd Qu.:  1694.8  \n                    Max.   :112760.4  \n                    NA's   :28270     \n\n\nWe see some missing values in the Price variable, but before I deal with those values, I will filter my data to the cities that I am interested the most: Houston, Orlando, and Portland.\n\n\nShow the code\npreferred_cities <- rent_clean %>%\n  dplyr:::filter(RegionName %in% c(\"Houston\", \"Orlando\", \"Portland\")) %>%\n  dplyr:::filter(RegionID %in% c(\"13121\", \"13373\", \"39051\"))\n\nsummary(preferred_cities)\n\n\n    RegionID        SizeRank      RegionName         RegionType       \n Min.   :13121   Min.   : 2.00   Length:273         Length:273        \n 1st Qu.:13121   1st Qu.: 2.00   Class :character   Class :character  \n Median :13373   Median :20.00   Mode  :character   Mode  :character  \n Mean   :21848   Mean   :14.67                                        \n 3rd Qu.:39051   3rd Qu.:22.00                                        \n Max.   :39051   Max.   :22.00                                        \n  StateName            State              Metro            CountyName       \n Length:273         Length:273         Length:273         Length:273        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   Monthly              Price      Monthly_parsed      \n Length:273         Min.   :1195   Min.   :2015-03-31  \n Class :character   1st Qu.:1362   1st Qu.:2017-01-31  \n Mode  :character   Median :1473   Median :2018-12-31  \n                    Mean   :1490   Mean   :2018-12-30  \n                    3rd Qu.:1578   3rd Qu.:2020-11-30  \n                    Max.   :2088   Max.   :2022-09-30  \n\n\n\nAfter filtering the data, we don’t have any missing values\nWe see that the date goes from March 31, 2015, to September 30, 2022, with a monthly calculation of the rental value.\nThe monthly rent cost goes from 1,172 to 2,153 dollars\n\n\nCoerce to a tsibble with as_tsibble()- Three Cities\nA time series can be recorded as a tsibble object in R. tsibble objects extend tidy data frames (tibble objects) by introducing temporal structure, and to do it, we need to declare key and index. In this case, the Monthly_parsed containing the data-time is the index and the RegionID is the key. Other columns can be considered as measured variables.\n\n\nShow the code\ntsb_pref_cities <- preferred_cities %>%\n                   select(RegionName,RegionID, Monthly_parsed, Price)\n\ntsb_pref_cities <-tsb_pref_cities%>%\n  as_tsibble(key= RegionName, index= Monthly_parsed)%>%\n                   index_by(year_month = ~ yearmonth(.))\n\ntsibble_df <-tsb_pref_cities%>%\n  select(-RegionID)%>%\n  as_tsibble(key= RegionName, index= year_month)\n\n\nTo visualize the data, I could usee the autoplot() command, but I rather to create my graph with ggplot.\n\n\nShow the code\nplot_cities <- tsibble_df %>%\n  ggplot(aes(x= year_month, y= Price, color= RegionName)) +\n  geom_line(size=1)+\n   \n    labs(y=\"Rent Price in US Dollars\", \n       x= \"Year\",\n       title=\"Rent Cost in Portland, Orlando & Houston, 2015-2022\",\n       caption = \"data:https://www.zillow.com/research/data\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n  scale_colour_hue(name= \" \")+\n# Set ggplot theme\ntheme_set(theme_minimal(base_family = \"Roboto Mono\"))\ntheme_update(\n  axis.text.y = element_text(size = 10),\n    axis.text.x = element_text(size = 10),\n  legend.title = element_text(size = 9),\n  plot.caption = element_text(\n    family = \"Special Elite\",\n    size = 10,\n    color = \"grey70\",\n    face = \"bold\",\n    margin = margin(5, 0, 20, 0)\n  ),\n  plot.margin = margin(10, 25, 10, 25)\n)\n\nplot_cities\n\n\n\n\n\n\n\nSeasonal Plots\n\n\nShow the code\npdx <- tsibble_df %>%\n  filter(RegionName == \"Portland\")\n\nseas_pdx <- pdx%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Portland's Seasonal Plot\")+\n  \n  scale_y_continuous(labels=scales::dollar_format())+\n# Set ggplot theme\ntheme_set(theme_minimal(base_family = \"Roboto Mono\"))\ntheme_update(\n  panel.background = element_rect(fill = NA, color = NA),\n  panel.border = element_rect(fill = NA, color = NA),\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank(),\n  axis.text.x = element_blank(),\n  axis.text.y = element_text(size = 10),\n  axis.ticks = element_blank(),\n  axis.title.y = element_text(size = 13, margin = margin(r = 10)),\n  legend.title = element_text(size = 9),\n  plot.caption = element_text(\n    family = \"Special Elite\",\n    size = 10,\n    color = \"grey70\",\n    face = \"bold\",\n    margin = margin(5, 0, 20, 0)\n  ),\n  plot.margin = margin(10, 25, 10, 25)\n)\n\nhst <- tsibble_df %>%\n  filter(RegionName == \"Houston\")\n\n\nseas_hst <- hst%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Houston's Seasonal Plot\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n# Set ggplot theme\ntheme_set(theme_minimal(base_family = \"Roboto Mono\"))\ntheme_update(\n  panel.background = element_rect(fill = NA, color = NA),\n  panel.border = element_rect(fill = NA, color = NA),\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank(),\n  axis.text.x = element_blank(),\n  axis.text.y = element_text(size = 10),\n  axis.ticks = element_blank(),\n  axis.title.y = element_text(size = 13, margin = margin(r = 10)),\n  legend.title = element_text(size = 9),\n  plot.caption = element_text(\n    family = \"Special Elite\",\n    size = 10,\n    color = \"grey70\",\n    face = \"bold\",\n    margin = margin(5, 0, 20, 0)\n  ),\n  plot.margin = margin(10, 25, 10, 25)\n)\n\n\norl <- tsibble_df %>%\n  filter(RegionName == \"Orlando\")\n\n\nseas_orl <- orl%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Orlando's Seasonal Plot\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n# Set ggplot theme\ntheme_set(theme_minimal(base_family = \"Roboto Mono\"))\ntheme_update(\n  panel.background = element_rect(fill = NA, color = NA),\n  panel.border = element_rect(fill = NA, color = NA),\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank(),\n  axis.text.x = element_blank(),\n  axis.text.y = element_text(size = 10),\n  axis.ticks = element_blank(),\n  axis.title.y = element_text(size = 13, margin = margin(r = 10)),\n  legend.title = element_text(size = 9),\n  plot.caption = element_text(\n    family = \"Special Elite\",\n    size = 10,\n    color = \"grey70\",\n    face = \"bold\",\n    hjust = .5,\n    margin = margin(5, 0, 20, 0)\n  ),\n  plot.margin = margin(10, 25, 10, 25)\n)\n\nplot_grid(seas_pdx, seas_hst, seas_orl, cols = 1, nrows = 3)\n\n\n\n\n\n\n\nSubseries\n\n\nShow the code\npdx%>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+theme_minimal()+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\nShow the code\nhst %>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+theme_minimal()+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\nShow the code\norl%>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+theme_minimal()+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\nFeatures: Summary\n\n\nShow the code\ntsb_pref_cities %>%\n    features(Price, features = list(mean = mean, min = min, max = max, sd = sd,\n        quantile))\n\n\n# A tibble: 3 × 10\n  RegionName  mean   min   max    sd  `0%` `25%` `50%` `75%` `100%`\n  <chr>      <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 Houston    1380. 1285. 1597.  80.7 1285. 1318. 1366. 1389.  1597.\n2 Orlando    1499. 1195. 2088. 231.  1195. 1311. 1473. 1530.  2088.\n3 Portland   1592. 1327. 1899. 127.  1327. 1499. 1582. 1637.  1899.\n\n\n\n\nDecomposition Features\n\n\nShow the code\nfeast_pref_cities <-\ntsb_pref_cities %>% features(Price, feat_stl)\n\nfeast_pref_cities\n\n\n# A tibble: 3 × 10\n  RegionName trend_str…¹ seaso…² seaso…³ seaso…⁴ spiki…⁵ linea…⁶ curva…⁷ stl_e…⁸\n  <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 Houston          0.994  0.156        6       2   0.805    655.    269.   0.743\n2 Orlando          0.999  0.145        4       0   2.26    2019.    572.   0.744\n3 Portland         0.995  0.0365       5       0   0.921   1158.    140.   0.773\n# … with 1 more variable: stl_e_acf10 <dbl>, and abbreviated variable names\n#   ¹​trend_strength, ²​seasonal_strength_week, ³​seasonal_peak_week,\n#   ⁴​seasonal_trough_week, ⁵​spikiness, ⁶​linearity, ⁷​curvature, ⁸​stl_e_acf1\n\n\n\n\ncoef_hurst\nA measure of the degree to which adjacent observations depend on one another over time. Generically, this statistic takes values between zero and one with one indicating very high levels of dependence through time.\n\n\nShow the code\ntsb_pref_cities %>% features(Price,coef_hurst)\n\n\n# A tibble: 3 × 2\n  RegionName coef_hurst\n  <chr>           <dbl>\n1 Houston         0.998\n2 Orlando         0.998\n3 Portland        0.998\n\n\n\n\nThe Absence of Correlation\n\n\nShow the code\ntsb_pref_cities %>% features(Price, features = list(box_pierce, ljung_box))\n\n\n# A tibble: 3 × 5\n  RegionName bp_stat bp_pvalue lb_stat lb_pvalue\n  <chr>        <dbl>     <dbl>   <dbl>     <dbl>\n1 Houston       81.5         0    84.2         0\n2 Orlando       82.6         0    85.4         0\n3 Portland      80.3         0    82.9         0\n\n\n\n\nThe Box-Cox\n\n\nShow the code\ntsb_pref_cities %>% features(Price, features = guerrero) \n\n\n# A tibble: 3 × 2\n  RegionName lambda_guerrero\n  <chr>                <dbl>\n1 Houston             -0.900\n2 Orlando             -0.900\n3 Portland             0.729"
  },
  {
    "objectID": "posts/Time-Series/TimeSeries.html#step-4-choosing-and-fitting-models",
    "href": "posts/Time-Series/TimeSeries.html#step-4-choosing-and-fitting-models",
    "title": "Time Series Project",
    "section": "Step 4: Choosing and fitting models",
    "text": "Step 4: Choosing and fitting models"
  },
  {
    "objectID": "posts/Time-Series/TimeSeries.html#step-5-using-and-evaluating-a-forecasting-model",
    "href": "posts/Time-Series/TimeSeries.html#step-5-using-and-evaluating-a-forecasting-model",
    "title": "Time Series Project",
    "section": "Step 5: Using and evaluating a forecasting model",
    "text": "Step 5: Using and evaluating a forecasting model"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio",
    "section": "",
    "text": "Dec 1, 2022\n\n\nKarol Orozco\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2022\n\n\nKarol Orozco\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 4, 2022\n\n\nKarol Orozco\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2022\n\n\nKarol Orozco\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Employee Turnover/Analyzing Employee Turnover.html",
    "href": "posts/Employee Turnover/Analyzing Employee Turnover.html",
    "title": "Predicting Employee Attrition",
    "section": "",
    "text": "You work for the human capital department of a large corporation. The Board is worried about the relatively high turnover, and your team must look into ways to reduce the number of employees leaving the company. The team needs to understand better the situation, which employees are more likely to leave, and why. Once it is clear what variables impact employee churn, you can present your findings along with your ideas on how to attack the problem.\n\n\nCreate a report that covers the following:\n\nWhich department has the highest employee turnover? Which one has the lowest?\nInvestigate which variables seem to be better predictors of employee departure.\nWhat recommendations would you make regarding ways to reduce employee turnover?"
  },
  {
    "objectID": "posts/Employee Turnover/Analyzing Employee Turnover.html#import-libraries",
    "href": "posts/Employee Turnover/Analyzing Employee Turnover.html#import-libraries",
    "title": "Predicting Employee Attrition",
    "section": "2. Import Libraries",
    "text": "2. Import Libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(skimr)\nlibrary(janitor)\nlibrary(knitr)\nlibrary(radiant)\nlibrary(colorspace)\nlibrary(gridExtra)\nlibrary(jtools)\nlibrary(dplyr)\nlibrary(MASS)"
  },
  {
    "objectID": "posts/Employee Turnover/Analyzing Employee Turnover.html#prepare-and-analyze-the-data",
    "href": "posts/Employee Turnover/Analyzing Employee Turnover.html#prepare-and-analyze-the-data",
    "title": "Predicting Employee Attrition",
    "section": "3. Prepare and Analyze the Data",
    "text": "3. Prepare and Analyze the Data\n\n\n  X     MMM.YY Emp_ID Age Gender City Education_Level Salary Dateofjoining\n1 1 2016-01-01      1  28   Male  C23          Master  57387    2015-12-24\n2 2 2016-02-01      1  28   Male  C23          Master  57387    2015-12-24\n3 3 2016-03-01      1  28   Male  C23          Master  57387    2015-12-24\n4 4 2017-11-01      2  31   Male   C7          Master  67016    2017-11-06\n5 5 2017-12-01      2  31   Male   C7          Master  67016    2017-11-06\n6 6 2016-12-01      4  43   Male  C13          Master  65603    2016-12-07\n  LastWorkingDate Joining.Designation Designation Total.Business.Value\n1            <NA>                   1           1              2381060\n2            <NA>                   1           1              -665480\n3      2016-03-11                   1           1                    0\n4            <NA>                   2           2                    0\n5            <NA>                   2           2                    0\n6            <NA>                   2           2                    0\n  Quarterly.Rating\n1                2\n2                2\n3                2\n4                1\n5                1\n6                1\n\n\n\nThe variables are defined as follow:\n\nMMMM-YY: Reporting Date (Monthly)\nEmp_ID: Unique id for employees\nAge: ge of the employee\nGender: Gender of the employee\nCity: City Code of the employee\nEducation_Level: Education level : Bachelor, Master or College\nSalary: Salary of the employee\nDateofjoining: Joining date for the employee\nLastWorkingDate: Last date of working for the employee\nJoining Designation: Designation of the employee at the time of joining\nDesignation: Designation of the employee at the time of reporting\nTotalBusinessValue: The total business value acquired by the employee in a month (negative business indicates cancellation/refund of sold insurance policies)\nQuarterly Rating: Quarterly rating of the employee: 1,2,3,4 (higher is better)\n\n\n\n       X             MMM.YY              Emp_ID               Age       \n Min.   :    1   Min.   :2016-01-01   Length:19104       Min.   :21.00  \n 1st Qu.: 4777   1st Qu.:2016-06-01   Class :character   1st Qu.:30.00  \n Median : 9552   Median :2016-12-01   Mode  :character   Median :34.00  \n Mean   : 9552   Mean   :2016-12-10                      Mean   :34.65  \n 3rd Qu.:14328   3rd Qu.:2017-07-01                      3rd Qu.:39.00  \n Max.   :19104   Max.   :2017-12-01                      Max.   :58.00  \n                                                                        \n    Gender          City           Education_Level     Salary      \n Female: 8001   Length:19104       Bachelor:6864   Min.   : 10747  \n Male  :11103   Class :character   College :5913   1st Qu.: 42383  \n                Mode  :character   Master  :6327   Median : 60087  \n                                                   Mean   : 65652  \n                                                   3rd Qu.: 83969  \n                                                   Max.   :188418  \n                                                                   \n Dateofjoining        LastWorkingDate      Joining.Designation Designation\n Min.   :2010-04-01   Min.   :2015-12-31   Min.   :1.000       1:5202     \n 1st Qu.:2013-11-29   1st Qu.:2016-06-06   1st Qu.:1.000       2:6627     \n Median :2015-09-12   Median :2016-12-20   Median :1.000       3:4826     \n Mean   :2015-04-29   Mean   :2016-12-21   Mean   :1.691       4:2144     \n 3rd Qu.:2016-11-05   3rd Qu.:2017-07-03   3rd Qu.:2.000       5: 305     \n Max.   :2017-12-28   Max.   :2017-12-28   Max.   :5.000                  \n                      NA's   :17488                                       \n Total.Business.Value Quarterly.Rating\n Min.   :-6000000     1:7679          \n 1st Qu.:       0     2:5553          \n Median :  250000     3:3895          \n Mean   :  571662     4:1977          \n 3rd Qu.:  699700                     \n Max.   :33747720                     \n                                      \n\n\n\nThis datase contains 19104 obs. of 13 variables\nThe median age is 34 years old\nNow, we need to know that in order to predict if the employee will leave the company or not can be best predicted if we have last working day info available and hence although the missing percentage is high, it’s not because of Null values but the employees are not planning to leave the company and hence have not provided the info.Therefore we should not remove this feature from our data, instead we need to treat this as our target variable.\nSalary goes from 42383 to 188418 dollars\n\n\n\nShow the code\nempl_churn <- empl_turnover %>% mutate(Churn=  ifelse(is.na(LastWorkingDate), \"0\", \"1\"))\n\n\n\n\nTurnover\nNumber of employees that left the company:\nThe overall attrition rate in the company is 8.5%, which means that 1,616 employees have left the company.\n\n\nShow the code\nresult <- single_prop(empl_churn, var = \"Churn\", lev = \"1\")\nsummary(result)\n\n\nSingle proportion test (binomial exact)\nData      : empl_churn \nVariable  : Churn \nLevel     : 1 in Churn \nConfidence: 0.95 \nNull hyp. : the proportion of 1 in Churn = 0.5 \nAlt. hyp. : the proportion of 1 in Churn not equal to 0.5 \n\n     p    ns      n n_missing    sd    se    me\n 0.085 1,616 19,104         0 0.278 0.002 0.004\n\n   diff    ns p.value  2.5% 97.5%    \n -0.415 1,616  < .001 0.081 0.089 ***\n\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nShow the code\nempl_churn$Churn.Numeric <- as.numeric(as.factor(empl_churn$Churn))-1\n\nglimpse(empl_churn)\n\n\nRows: 19,104\nColumns: 16\n$ X                    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15…\n$ MMM.YY               <date> 2016-01-01, 2016-02-01, 2016-03-01, 2017-11-01, …\n$ Emp_ID               <chr> \"1\", \"1\", \"1\", \"2\", \"2\", \"4\", \"4\", \"4\", \"4\", \"4\",…\n$ Age                  <int> 28, 28, 28, 31, 31, 43, 43, 43, 43, 43, 29, 29, 2…\n$ Gender               <fct> Male, Male, Male, Male, Male, Male, Male, Male, M…\n$ City                 <chr> \"C23\", \"C23\", \"C23\", \"C7\", \"C7\", \"C13\", \"C13\", \"C…\n$ Education_Level      <fct> Master, Master, Master, Master, Master, Master, M…\n$ Salary               <int> 57387, 57387, 57387, 67016, 67016, 65603, 65603, …\n$ Dateofjoining        <date> 2015-12-24, 2015-12-24, 2015-12-24, 2017-11-06, …\n$ LastWorkingDate      <date> NA, NA, 2016-03-11, NA, NA, NA, NA, NA, NA, 2017…\n$ Joining.Designation  <int> 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3…\n$ Designation          <fct> 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3…\n$ Total.Business.Value <int> 2381060, -665480, 0, 0, 0, 0, 0, 0, 350000, 0, 0,…\n$ Quarterly.Rating     <fct> 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2…\n$ Churn                <chr> \"0\", \"0\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\",…\n$ Churn.Numeric        <dbl> 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0…\n\n\n\n\nAre the employees leaving the destination at the same rate?\n\nThe data shows that Destination 1 has the highest employee turnover rate, followed by 2 and destination 5 has the lowest rate.\n\n\n\nShow the code\nempl_turnover_prop <- empl_churn %>% \n  tabyl(Designation, Churn) %>%\n  adorn_percentages(\"row\") \nkable(empl_turnover_prop,  caption = \"Destination vs Attrition\")\n\n\n\nDestination vs Attrition\n\n\nDesignation\n0\n1\n\n\n\n\n1\n0.8854287\n0.1145713\n\n\n2\n0.9094613\n0.0905387\n\n\n3\n0.9301699\n0.0698301\n\n\n4\n0.9673507\n0.0326493\n\n\n5\n0.9573770\n0.0426230\n\n\n\n\n\n\n\nAttrition vs Age\nThe majority of employees that left the organization are in their 30’s , and the proportion steadily declined.\nWhat does it mean for the organization? Well,\n\n\nShow the code\n### Age vs Turnover\n\n\nempl_churn %>%\ngroup_by(Age, Churn)%>%\nggplot(aes(x = Age, fill = Churn)) +\ngeom_histogram(bins = 30L) +\n\nscale_fill_manual(values=c(\"gray\", \"#2166AC\"))+\n\n ggpubr::theme_pubclean()+\n\n\n  labs( x= \"Age\",\n        y= \"Number of Employees\",\n        title = \"Attrition vs Age\")+\n\ntheme(plot.title = element_text(size =12, face = \"bold\", hjust = 0.45),\nlegend.position=\"bottom\")\n\n\n\n\n\n\n\nShow the code\nnames(empl_churn)\n\n\n [1] \"X\"                    \"MMM.YY\"               \"Emp_ID\"              \n [4] \"Age\"                  \"Gender\"               \"City\"                \n [7] \"Education_Level\"      \"Salary\"               \"Dateofjoining\"       \n[10] \"LastWorkingDate\"      \"Joining.Designation\"  \"Designation\"         \n[13] \"Total.Business.Value\" \"Quarterly.Rating\"     \"Churn\"               \n[16] \"Churn.Numeric\""
  },
  {
    "objectID": "posts/Employee Turnover/Analyzing Employee Turnover.html#the-model",
    "href": "posts/Employee Turnover/Analyzing Employee Turnover.html#the-model",
    "title": "Predicting Employee Attrition",
    "section": "4. The Model",
    "text": "4. The Model"
  }
]