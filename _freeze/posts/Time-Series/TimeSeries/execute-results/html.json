{
  "hash": "3f9effbb8858179c607bbe6b435e85c3",
  "result": {
    "markdown": "---\ntitle: \"Time Series Project\"\nauthor: \"Karol Orozco\"\ndate: \"2022-10-04\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate); library(tsibble)\nlibrary(readxl)\nlibrary(fpp3)\n```\n:::\n\n\n\n## Step 1: Problem Definition\n\nIn this project, I will perform a time series analysis using Zillow's historical median home prices for the US from March 2015 to October 2022. The project aims to provide information on renting costs in Orlando- FL, Portland- OR, and Houston- TX, and find the month that offers the lowest price to move in.\n\n## Step 2: Gathering Information\n\nYou can find this free dataset on the Zillow website: https://www.zillow.com/research/data/#other-metrics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_city <- read.csv(\"C:/Users/karol/Desktop/Portfolio/City_zori_sm_month.csv\")\n```\n:::\n\n\n- RegionID:\tThis is unique Id for the Regions\n- SizeRank:\tThis is the ranking done based on the size of the region\n- RegionName:\tThis field contains the name of the city.\n- RegionType:\tType of region.\n- StateName:\tState\n- State:\tThis column provide the specific City Name of Housing Data\n- Metro:\tThis provide the name of the metro city around that region\n- County: Name\tThis is the county name for that region\n- Months: Column\tThese columns contains the prices of region for every month since 2015- 2022\n\n## Step 3: Preliminary (exploratory) analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(raw_city[,c(1:11)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3500 obs. of  11 variables:\n $ RegionID  : int  6181 12447 39051 17426 6915 40326 13271 18959 54296 38128 ...\n $ SizeRank  : int  0 1 2 3 4 5 6 7 8 9 ...\n $ RegionName: chr  \"New York\" \"Los Angeles\" \"Houston\" \"Chicago\" ...\n $ RegionType: chr  \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ State     : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ Metro     : chr  \"New York-Newark-Jersey City, NY-NJ-PA\" \"Los Angeles-Long Beach-Anaheim, CA\" \"Houston-The Woodlands-Sugar Land, TX\" \"Chicago-Naperville-Elgin, IL-IN-WI\" ...\n $ CountyName: chr  \"Queens County\" \"Los Angeles County\" \"Harris County\" \"Cook County\" ...\n $ X3.31.2015: num  2730 2004 1285 1555 1019 ...\n $ X4.30.2015: num  2755 2011 1293 1572 1029 ...\n $ X5.31.2015: num  2780 2033 1304 1587 1040 ...\n```\n:::\n:::\n\n\nWe have to make this dataset tidy. Tidy Data is a way of structuring data so that it can be easily understood by people and analyzed by machines.\n\nI need to remove the X at the beginning of the dates (X3.31.2015,...)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(raw_city) <- sub(\"^X\", \"\", names(raw_city))\nstr(raw_city[,c(1:10)],10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3500 obs. of  10 variables:\n $ RegionID  : int  6181 12447 39051 17426 6915 40326 13271 18959 54296 38128 ...\n $ SizeRank  : int  0 1 2 3 4 5 6 7 8 9 ...\n $ RegionName: chr  \"New York\" \"Los Angeles\" \"Houston\" \"Chicago\" ...\n $ RegionType: chr  \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ State     : chr  \"NY\" \"CA\" \"TX\" \"IL\" ...\n $ Metro     : chr  \"New York-Newark-Jersey City, NY-NJ-PA\" \"Los Angeles-Long Beach-Anaheim, CA\" \"Houston-The Woodlands-Sugar Land, TX\" \"Chicago-Naperville-Elgin, IL-IN-WI\" ...\n $ CountyName: chr  \"Queens County\" \"Los Angeles County\" \"Harris County\" \"Cook County\" ...\n $ 3.31.2015 : num  2730 2004 1285 1555 1019 ...\n $ 4.30.2015 : num  2755 2011 1293 1572 1029 ...\n```\n:::\n:::\n\n\nNow, I will create a new column called Price, where the values from the dates column will merge into it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrent_city <- raw_city %>% \n  pivot_longer(-c(RegionID,SizeRank,RegionName,RegionType,StateName,State,Metro,CountyName),\n    names_to = \"Monthly\",\n    values_to = \"Price\"\n  ) \nstr(rent_city)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [318,500 Ã— 10] (S3: tbl_df/tbl/data.frame)\n $ RegionID  : int [1:318500] 6181 6181 6181 6181 6181 6181 6181 6181 6181 6181 ...\n $ SizeRank  : int [1:318500] 0 0 0 0 0 0 0 0 0 0 ...\n $ RegionName: chr [1:318500] \"New York\" \"New York\" \"New York\" \"New York\" ...\n $ RegionType: chr [1:318500] \"city\" \"city\" \"city\" \"city\" ...\n $ StateName : chr [1:318500] \"NY\" \"NY\" \"NY\" \"NY\" ...\n $ State     : chr [1:318500] \"NY\" \"NY\" \"NY\" \"NY\" ...\n $ Metro     : chr [1:318500] \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" \"New York-Newark-Jersey City, NY-NJ-PA\" ...\n $ CountyName: chr [1:318500] \"Queens County\" \"Queens County\" \"Queens County\" \"Queens County\" ...\n $ Monthly   : chr [1:318500] \"3.31.2015\" \"4.30.2015\" \"5.31.2015\" \"6.30.2015\" ...\n $ Price     : num [1:318500] 2730 2755 2780 2805 2821 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Converting the Date from factor to character\n\nrent_clean <- rent_city %>%\n            mutate(Monthly_parsed = as.Date(Monthly,\"%m.%d.%Y\"))\n\n\nrent_clean[[\"Monthly\"]]<- as.character(rent_clean$Monthly)\n\nrent_city[[\"Monthly\"]]<- as.character(rent_city$Monthly)\nsummary(rent_city)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    RegionID         SizeRank        RegionName         RegionType       \n Min.   :  3310   Min.   :    0.0   Length:318500      Length:318500     \n 1st Qu.: 16840   1st Qu.:  886.8   Class :character   Class :character  \n Median : 31552   Median : 1902.5   Mode  :character   Mode  :character  \n Mean   : 63080   Mean   : 2637.9                                        \n 3rd Qu.: 46147   3rd Qu.: 3441.2                                        \n Max.   :840556   Max.   :28107.0                                        \n                                                                         \n  StateName            State              Metro            CountyName       \n Length:318500      Length:318500      Length:318500      Length:318500     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Monthly              Price         \n Length:318500      Min.   :     0.0  \n Class :character   1st Qu.:   912.1  \n Mode  :character   Median :  1273.5  \n                    Mean   :  1392.0  \n                    3rd Qu.:  1694.8  \n                    Max.   :112760.4  \n                    NA's   :28270     \n```\n:::\n:::\n\n\n\nWe see some missing values in the Price variable, but before I deal with those values, I will filter my data to the cities that I am interested the most: Houston, Orlando, and Portland.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreferred_cities <- rent_clean %>%\n  dplyr:::filter(RegionName %in% c(\"Houston\", \"Orlando\", \"Portland\")) %>%\n  dplyr:::filter(RegionID %in% c(\"13121\", \"13373\", \"39051\"))\n\nsummary(preferred_cities)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    RegionID        SizeRank      RegionName         RegionType       \n Min.   :13121   Min.   : 2.00   Length:273         Length:273        \n 1st Qu.:13121   1st Qu.: 2.00   Class :character   Class :character  \n Median :13373   Median :20.00   Mode  :character   Mode  :character  \n Mean   :21848   Mean   :14.67                                        \n 3rd Qu.:39051   3rd Qu.:22.00                                        \n Max.   :39051   Max.   :22.00                                        \n  StateName            State              Metro            CountyName       \n Length:273         Length:273         Length:273         Length:273        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   Monthly              Price      Monthly_parsed      \n Length:273         Min.   :1195   Min.   :2015-03-31  \n Class :character   1st Qu.:1362   1st Qu.:2017-01-31  \n Mode  :character   Median :1473   Median :2018-12-31  \n                    Mean   :1490   Mean   :2018-12-30  \n                    3rd Qu.:1578   3rd Qu.:2020-11-30  \n                    Max.   :2088   Max.   :2022-09-30  \n```\n:::\n:::\n\n\n\n- After filtering the data, we don't have any missing values\n- We see that the date goes from March 31, 2015, to September 30, 2022, with a monthly calculation of the rental value.\n- The monthly rent cost goes from 1,172 to 2,153 dollars\n\n#### Coerce to a tsibble with as_tsibble()- Three Cities\n\nA time series can be recorded as a tsibble object in R. tsibble objects extend tidy data frames (tibble objects) by introducing temporal structure, and to do it, we need to declare key and index. In this case, the Monthly_parsed containing the data-time is the index and the RegionID is the key. Other columns can be considered as measured variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsb_pref_cities <- preferred_cities %>%\n                   select(RegionName,RegionID, Monthly_parsed, Price)\n\ntsb_pref_cities <-tsb_pref_cities%>%\n  as_tsibble(key= RegionName, index= Monthly_parsed)%>%\n                   index_by(year_month = ~ yearmonth(.))\n\ntsibble_df <-tsb_pref_cities%>%\n  select(-RegionID)%>%\n  as_tsibble(key= RegionName, index= year_month)\n```\n:::\n\n\nTo visualize the data, I could usee the autoplot() command, but I rather to create my graph with ggplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cities <- tsibble_df %>%\n  ggplot(aes(x= year_month, y= Price, color= RegionName)) +\n  geom_line(size=1)+\n   \n    labs(y=\"Rent Price in US Dollars\", \n       x= \"Year\",\n       title=\"Rent Cost in Portland, Orlando & Houston, 2015-2022\",\n       caption = \"data:https://www.zillow.com/research/data\")+\n  scale_colour_hue(name= \" \")+\n  scale_y_continuous(labels=scales::dollar_format())\n\nplot_cities\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n#### Seasonal Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\npdx <- tsibble_df %>%\n  filter(RegionName == \"Portland\")\n\npdx%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Portland\")+\n  scale_y_continuous(labels=scales::dollar_format())\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-10-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhst <- tsibble_df %>%\n  filter(RegionName == \"Houston\")\n\n\nhst%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Houston\")+\n  scale_y_continuous(labels=scales::dollar_format())\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-11-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norl <- tsibble_df %>%\n  filter(RegionName == \"Orlando\")\n\n\norl%>%\ngg_season(Price, labels = \"both\")+\n  labs(x= \"\",\n       y= \"\",\n       title=\"Orlando\")+\n  scale_y_continuous(labels=scales::dollar_format())\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\n#### Subseries\n\n\n::: {.cell}\n\n```{.r .cell-code}\npdx%>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhst %>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norl%>%\ngg_subseries(Price)+\n  labs(y= \"Rent Price\",\n       x= \"Year\")+\n  scale_y_continuous(labels=scales::dollar_format())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](TimeSeries_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Step 4: Choosing and fitting models\n\n\n## Step 5: Using and evaluating a forecasting model\n\n",
    "supporting": [
      "TimeSeries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}